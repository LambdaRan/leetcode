#include <iostream>#include <algorithm>#include <sstream>#include <functional>#include <utility>#include <iterator>#include <string>#include <vector>#include "gtest/gtest.h"using namespace std;/** Name: 541. Reverse String II* WebSite: https://leetcode.com/problems/reverse-string-ii/* Description: **/class Solution {public:    /*    * Runtime:    ms    * Your runtime beats  % of cpp submissions.     */    string reverseStr(string s, int k)     {        if (s.empty()) {            return "";        }        int ssize = static_cast<int>(s.size());        for (int size = 0; size < ssize; size += 2 * k) {            int kIndex = size + k;            if (kIndex < ssize) {                std::reverse(std::next(s.begin(), size), std::next(s.begin(), kIndex));            } else {                std::reverse(std::next(s.begin(), size), s.end());            }        }        return s;    }    string reverseStr2(string s, int k)    {        if (s.empty()) {            return "";        }        int ssize = static_cast<int>(s.size());        for (int i = 0; i < ssize; i += 2 * k) {            int start = i;            int end = std::min(start+k-1, ssize-1);            while (start < end) {                std::swap(s[start++], s[end--]);            }        }        return s;    }};Solution solu; TEST(ReverseStrTest, Positive) {    string s1 = "abcdefg";    EXPECT_EQ(solu.reverseStr(s1, 2), "bacdfeg");}